plugins {
    id 'java'
    id 'fabric-loom' version '1.11-SNAPSHOT'
    id 'maven-publish'
}

version = project.property('mod_version')
group = project.property('maven_group')

base {
    archivesName = project.property('archives_base_name')
}

def targetJavaVersion = 21
java {
    toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    withSourcesJar()
}

loom {
    splitEnvironmentSourceSets()

    mods {
        enderdragon_egg_cant_be_putted_in_any_containers {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
}

repositories {
}

dependencies {
    minecraft "com.mojang:minecraft:${project.property('minecraft_version')}"
    mappings "net.fabricmc:yarn:${project.property('yarn_mappings')}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.property('loader_version')}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.property('fabric_version')}"
}

processResources {
    inputs.property 'version', project.version
    inputs.property 'minecraft_version', project.property('minecraft_version')
    inputs.property 'loader_version', project.property('loader_version')
    filteringCharset 'UTF-8'

    filesMatching('fabric.mod.json') {
        expand(
            'version': project.version,
            'minecraft_version': project.property('minecraft_version'),
            'loader_version': project.property('loader_version')
        )
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.release = targetJavaVersion
}

jar {
    from('LICENSE') {
        rename { "${it}_${project.base.archivesName.get()}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = project.property('archives_base_name')
            from components.java
        }
    }

    repositories {
    }
}
